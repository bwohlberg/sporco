name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          activate-environment: test-env
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          conda install -c conda-forge pytest pytest-cov
          python -m pip install --upgrade pip
          pip install pytest-cov setuptools
          pip install -r requirements.txt
          pip install -e .
      - name: Unit tests
        run: |
          pytest --cov=sporco --cov-report xml
      - name: Upload coverage to codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          env_vars: OS,PYTHON
          fail_ci_if_error: false
          files: coverage.xml
          flags: unittests
          name: codecov-umbrella
          verbose: true


